<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cimbalino.Phone.Toolkit.Background</name>
    </assembly>
    <members>
        <member name="T:Cimbalino.Phone.Toolkit.Data.TableObject">
            <summary>
            Represents a base class to use with a TableAttribute marked class.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.VerifyPropertyName(System.String)">
            <summary>
            Verifies that a property name exists in this ViewModel. This method can be called before the property is used, for instance before calling RaisePropertyChanged. It avoids errors when a property name is changed but some places are missed. <para>This method is only active in DEBUG mode.</para>
            </summary>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.RaisePropertyChanged(System.String)">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <remarks>If the propertyName parameter does not correspond to an existing property on the current class, an exception is thrown in DEBUG configuration only.</remarks>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.RaisePropertyChanged``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the PropertyChanged event if needed.
            </summary>
            <typeparam name="T">The type of the property that changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property that changed.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.RaisePropertyChanging(System.String)">
            <summary>
            Raises the PropertyChanging event if needed.
            </summary>
            <param name="propertyName">The name of the property that changed.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.RaisePropertyChanging``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Raises the PropertyChanging event if needed.
            </summary>
            <typeparam name="T">The type of the property that is changing.</typeparam>
            <param name="propertyExpression">An expression identifying the property that is changing.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.GetPropertyName``1(System.Linq.Expressions.Expression{System.Func{``0}})">
            <summary>
            Extracts the name of a property from an expression.
            </summary>
            <typeparam name="T">The type of the property.</typeparam>
            <param name="propertyExpression">An expression returning the property's name.</param>
            <returns>The name of the property returned by the expression.</returns>
            <exception cref="T:System.ArgumentNullException">If the expression is null.</exception>
            <exception cref="T:System.ArgumentException">If the expression does not represent a property.</exception>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.Set``1(System.String,``0@,``0)">
            <summary>
            Assigns a new value to the property. Then, raises the PropertyChanged event if needed. 
            </summary>
            <typeparam name="T">The type of the property that changed.</typeparam>
            <param name="propertyName">The name of the property that changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change occurred.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Data.TableObject.Set``1(System.Linq.Expressions.Expression{System.Func{``0}},``0@,``0)">
            <summary>
            Assigns a new value to the property. Then, raises the PropertyChanged event if needed. 
            </summary>
            <typeparam name="T">The type of the property that changed.</typeparam>
            <param name="propertyExpression">An expression identifying the property that changed.</param>
            <param name="field">The field storing the property's value.</param>
            <param name="newValue">The property's value after the change occurred.</param>
        </member>
        <member name="E:Cimbalino.Phone.Toolkit.Data.TableObject.PropertyChanged">
            <summary>
            Occurs after a property value changes.
            </summary>
        </member>
        <member name="E:Cimbalino.Phone.Toolkit.Data.TableObject.PropertyChanging">
            <summary>
            Occurs before a property value changes.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Byte"/> array instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ToBase64String(System.Byte[])">
            <summary>
            Converts an array of 8-bit unsigned integers to its equivalent <see cref="T:System.String"/> representation encoded with base 64 digits.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The string representation, in base 64, of the contents of <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ToString(System.Byte[],System.Text.Encoding)">
            <summary>
            Converts an array of 8-bit unsigned integers to its equivalent <see cref="T:System.String"/> representation, using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use for encoding the characters.</param>
            <returns>The string representation, of the contents of <paramref name="input"/>.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA1Hash(System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA1Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA256Hash(System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeSHA256Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeMD5Hash(System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.MD5"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeMD5Hash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.MD5"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA1Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACSHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA1Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACSHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA256Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACSHA256Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACSHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACMD5Hash(System.Byte[],System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACMD5"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ByteArrayExtensions.ComputeHMACMD5Hash(System.Byte[],System.Byte[],System.Int32,System.Int32)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACMD5"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">An array of 8-bit unsigned integers.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <param name="offset">The offset into the byte array from which to begin using data.</param>
            <param name="count">The number of bytes in the array to use as data.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Windows.DependencyObject"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualParent(System.Windows.DependencyObject)">
            <summary>
            Returns an object's parent object in the visual tree.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The parent object of the <paramref name="dependencyObject"/> object in the visual tree.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualAncestor``1(System.Windows.DependencyObject)">
            <summary>
            Returns the ancestor object of the <paramref name="dependencyObject"/> object in the visual tree with the specified type.
            </summary>
            <typeparam name="T">The type of the visual ancestor.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The ancestor object of the <paramref name="dependencyObject"/> object in the visual tree with the specified type.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualChilds(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual children of the dependency object.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualChilds``1(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual children of a dependency object with the specified type.
            </summary>
            <typeparam name="T">The type of the visual children.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual children of the dependency object with the specified type.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualDescendents(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual descendants of a dependency object.
            </summary>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual descendants of the dependency object.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DependencyObjectExtensions.GetVisualDescendents``1(System.Windows.DependencyObject)">
            <summary>
            Retrieves all the visual descendants of a dependency object with the specified type.
            </summary>
            <typeparam name="T">The type of the visual descendants.</typeparam>
            <param name="dependencyObject">The dependency object.</param>
            <returns>The visual descendants of the dependency object with the specified type.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.DispatcherExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Windows.Threading.Dispatcher"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DispatcherExtensions.BeginInvokeAfterTimeout(System.Windows.Threading.Dispatcher,System.Double,System.Action)">
            <summary>
            Executes the specified action asynchronously on the thread the Dispatcher is associated with, after the specified timeout.
            </summary>
            <param name="dispatcher">The dispatcher instance.</param>
            <param name="timeout">The amount of time to delay before the action is invoked.</param>
            <param name="action">The <see cref="T:System.Action"/> to execute.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DispatcherExtensions.BeginInvokeAfterTimeout(System.Windows.Threading.Dispatcher,System.TimeSpan,System.Action)">
            <summary>
            Executes the specified action asynchronously on the thread the Dispatcher is associated with, after the specified timeout.
            </summary>
            <param name="dispatcher">The dispatcher instance.</param>
            <param name="timeout">The <see cref="T:System.TimeSpan"/> representing the amount of time to delay before the action is invoked.</param>
            <param name="action">The <see cref="T:System.Action"/> to execute.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.DispatcherExtensions.ToTaskSchedulerAsync(System.Windows.Threading.Dispatcher)">
            <summary>
            Retrieves a <see cref="T:System.Threading.Tasks.TaskScheduler"/> instance for the thread the Dispatcher is associated with.
            </summary>
            <param name="dispatcher">The dispatcher instance.</param>
            <returns>A <see cref="T:System.Threading.Tasks.TaskScheduler"/> instance for the thread the Dispatcher is associated with.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.EnumExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Enum"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.EnumExtensions.GetNames(System.Enum)">
            <summary>
            Retrieves an array of the names of the constants in a specified enumeration.
            </summary>
            <param name="enumObj">The enumeration.</param>
            <returns>A string array of the names of the constants in <paramref name="enumObj"/>.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.EnumExtensions.GetValues(System.Enum)">
            <summary>
            Retrieves an array of the values of the constants in a specified enumeration.
            </summary>
            <param name="enumObj">The enumeration.</param>
            <returns>An array that contains the values of the constants in <paramref name="enumObj"/>.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.FrameworkElementExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Windows.FrameworkElement"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.FrameworkElementExtensions.ResetLanguageWithCurrentCulture(System.Windows.FrameworkElement)">
            <summary>
            Resets the <see cref="T:System.Windows.FrameworkElement"/> language information with a <see cref="T:System.Windows.Markup.XmlLanguage"/> matching the current <see cref="P:System.Threading.Thread.CurrentCulture"/>.
            </summary>
            <param name="frameworkElement">The framework element.</param>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.ICollectionExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.ICollection`1"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ICollectionExtensions.IsEmpty``1(System.Collections.Generic.ICollection{``0})">
            <summary>
            Determines whether the specified <see cref="T:System.Collections.Generic.ICollection`1"/> is empty.
            </summary>
            <param name="collection">The <see cref="T:System.Collections.Generic.ICollection`1"/> to check.</param>
            <typeparam name="TSource">The collection items type.</typeparam>
            <returns>True if the collection is empty; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ICollectionExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Adds the elements of the specified collection to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="sourceCollection">The <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
            <param name="collection">The collection whose elements should be added to the end of the <see cref="T:System.Collections.Generic.ICollection`1"/>. The collection itself cannot be null, but it can contain elements that are null, if type TSource is a reference type.</param>
            <typeparam name="TSource">The collection items type.</typeparam>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IComparableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IComparable"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IComparableExtensions.Between``1(``0,``0,``0)">
            <summary>
            Checks if the value is between two other values.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The lower value in the range.</param>
            <param name="maxValue">The upper value in the range.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>True if the value is between the two other values; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IComparableExtensions.Clamp``1(``0,``0,``0)">
            <summary>
            Clamps the a value between two other values.
            </summary>
            <param name="value">The value.</param>
            <param name="minValue">The lower value in the range.</param>
            <param name="maxValue">The upper value in the range.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The value clamped between the two other specified values.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IComparableExtensions.Max``1(``0,``0)">
            <summary>
            Compares the current value with another value and returns the largest of the two.
            </summary>
            <param name="currentValue">The value.</param>
            <param name="value">The value to compare to.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The largest of the two values.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IComparableExtensions.Min``1(``0,``0)">
            <summary>
            Compares the current value with another value and returns the smallest of the two.
            </summary>
            <param name="currentValue">The value.</param>
            <param name="value">The value to compare to.</param>
            <typeparam name="T">The values type.</typeparam>
            <returns>The smallest of the two values.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IConvertibleExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IConvertible"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IConvertibleExtensions.ToStringInvariantCulture(System.IConvertible)">
            <summary>
            Converts the value of this instance to its equivalent string representation, using an <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="input">The input.</param>
            <returns>The string representation of the value of this instance.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IDictionaryExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.IDictionary`2"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IDictionaryExtensions.Apply``2(System.Collections.Generic.IDictionary{``0,``1},System.Action{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            Applies the specified <see cref="T:System.Action`1"/> to the dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IDictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to get.</param>
            <returns>The value for the specified key.</returns>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IDictionaryExtensions.GetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value if the specified key does not exist.</param>
            <returns>The value for the specified key.</returns>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IDictionaryExtensions.SetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="TKey">The type of keys in the dictionary.</typeparam>
            <typeparam name="TValue">The type of values in the dictionary.</typeparam>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Collections.Generic.IEnumerable`1"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Applies the specified <see cref="T:System.Action`1"/> to the enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Apply``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Int32})">
            <summary>
            Applies the specified <see cref="T:System.Action`2"/> to the enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="action">The action to apply.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Returns a collection of the descendant elements for this enumerable, using the specified <see cref="T:System.Func`2"/> function.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="descendBy">The function to use for descending.</param>
            <returns>All the descendant items.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.ToObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> from this enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <returns>An <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> that contains the elements from the input sequence.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.ToOptimizedObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Creates an <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> from this enumerable.
            </summary>
            <param name="source">The enumerable.</param>
            <returns>An <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> that contains the elements from the input sequence.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Concat``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Produces a sequence containing the current elements along with the specified element.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="element">A <typeparamref name="TResult"/> element to include in the sequence.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains the current elements along with the specified element.</returns>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Produces a sequence containing the current elements randomly shuffled.
            </summary>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <param name="source">The enumerable.</param>
            <returns>A sequence containing the current elements randomly shuffled.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Shuffle``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Produces a sequence containing the current elements randomly shuffled, using the specified seed to calculate a starting value for the pseudo-random number sequence.
            </summary>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <param name="source">The enumerable.</param>
            <param name="seed">A number used to calculate a starting value for the pseudo-random number sequence. If a negative number is specified, the absolute value of the number is used.</param>
            <returns>A sequence containing the current elements randomly shuffled.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IEnumerableExtensions.Batch``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Produces a sequence containing batches of the current elements with the specified size.
            </summary>
            <param name="source">The enumerable.</param>
            <param name="batchSize">The batch size.</param>
            <typeparam name="TResult">The type of items in the enumerable.</typeparam>
            <returns>A sequence containing batches of the current elements with the specified size.</returns>
            <exception cref="T:System.ArgumentException">If the batch size is below 1.</exception>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IFormattableExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IFormattable"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IFormattableExtensions.ToStringInvariantCulture(System.IFormattable,System.String)">
            <summary>
            Converts the value of this instance to its equivalent string representation, using the specified format and an <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="input">The input.</param>
            <param name="format">A standard or custom format string.</param>
            <returns>The string representation of the value of this instance as specified by <paramref name="format"/>.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IntExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Int32"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IntExtensions.Times(System.Int32,System.Action)">
            <summary>
            Repeats the specified <see cref="T:System.Action"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action"/>.</param>
            <param name="action">The <see cref="T:System.Action"/> to repeat.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IntExtensions.Times(System.Int32,System.Action{System.Int32})">
            <summary>
            Repeats the specified <see cref="T:System.Action`1"/> the number of times.
            </summary>
            <param name="input">The number of times to repeat the <see cref="T:System.Action`1"/>.</param>
            <param name="action">The <see cref="T:System.Action`1"/> to repeat.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IntExtensions.Range(System.Int32,System.Int32)">
            <summary>
            Generates a sequence of integral numbers within a specified range.
            </summary>
            <param name="first">The value of the first integer in the sequence.</param>
            <param name="count">The number of sequential integers to generate.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a range of sequential integral numbers.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IntExtensions.To(System.Int32,System.Int32)">
            <summary>
            Generates a sequence of integral numbers within a specified range.
            </summary>
            <param name="first">The value of the first integer in the sequence.</param>
            <param name="last">The value of the last integer in the sequence.</param>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains a range of sequential integral numbers.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Text.Encoding)">
            <summary>
            Reads the lines of a file that has a specified encoding.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllBytes(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>A byte array containing the contents of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllBytes(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten..
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllText(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllLines(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.DeleteDirectory(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Boolean)">
            <summary>
            Deletes the specified directory and, if indicated, any subdirectories and files in the directory.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The relative path of the directory to delete within the isolated storage scope.</param>
            <param name="recursive">true to remove directories, subdirectories, and files in path; otherwise, false.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.ReadAllBytesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.WriteAllBytesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten..
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllTextAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.IsolatedStorageFileExtensions.AppendAllLinesAsync(System.IO.IsolatedStorage.IsolatedStorageFile,System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="store">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> object.</param>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Object"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.GetPropertyValue(System.Object,System.String)">
            <summary>
            Searches for the public property with the specified name and gets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The requested property value.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.GetPropertyValue``1(System.Object,System.String)">
            <summary>
            Searches for the public property with the specified name and gets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <returns>The requested property value.</returns>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.SetPropertyValue``1(System.Object,System.String,``0)">
            <summary>
            Searches for the public property with the specified name and sets its value.
            </summary>
            <param name="obj">The object.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="value">The requested property value to set.</param>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            Searches for the public method with the specified name and invokes it using the specified parameters.
            </summary>
            <param name="obj">The object.</param>
            <param name="methodName">The name of the method.</param>
            <param name="args">An argument list for the invoked method or constructor.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.InvokeMethod``1(System.Object,System.String,System.Object[])">
            <summary>
            Searches for the public method with the specified name and invokes it using the specified parameters, returning the result.
            </summary>
            <param name="obj">The object.</param>
            <param name="methodName">The name of the method.</param>
            <param name="args">An argument list for the invoked method or constructor.</param>
            <returns>The value returned from invoking the method.</returns>
            <typeparam name="TObject">The object type.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.AddEventHandler(System.Object,System.String,System.Delegate)">
            <summary>
            Adds an event handler to an event source.
            </summary>
            <param name="obj">The object.</param>
            <param name="target">The event source.</param>
            <param name="handler">Encapsulation of a method or methods to be invoked when the event is raised by the target.</param>
            <returns>Returns a <see cref="T:System.Delegate"/> to the attached event handler.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.ObjectExtensions.RemoveEventHandler(System.Object,System.String,System.Delegate)">
            <summary>
            Removes an event handler from an event source.
            </summary>
            <param name="obj">The object.</param>
            <param name="target">The event source.</param>
            <param name="handler">The delegate to be unhooked from the event source.</param>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.Stream"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ToArray(System.IO.Stream)">
            <summary>
            Writes the stream contents to a byte array.
            </summary>
            <param name="input">The input stream.</param>
            <returns>A new byte array.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ComputeSHA1Hash(System.IO.Stream)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ComputeSHA256Hash(System.IO.Stream)">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ComputeHMACSHA1Hash(System.IO.Stream,System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.HMACSHA1"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ComputeHMACSHA256Hash(System.IO.Stream,System.Byte[])">
            <summary>
            Computes the <see cref="T:System.Security.Cryptography.SHA256"/> hash for the current byte array using the managed library.
            </summary>
            <param name="input">The input <see cref="T:System.IO.Stream"/> to compute the hash code for.</param>
            <param name="key">The key to use in the hash algorithm.</param>
            <returns>The computed hash code.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamExtensions.ToArrayAsync(System.IO.Stream)">
            <summary>
            Writes the stream contents to a byte array.
            </summary>
            <param name="input">The input stream.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.StreamReaderExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.StreamReader"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamReaderExtensions.ReadLines(System.IO.StreamReader)">
            <summary>
            Reads the lines of a stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>The lines of the stream.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamReaderExtensions.ReadAllLines(System.IO.StreamReader)">
            <summary>
            Reads all lines of the stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>A string array containing all lines of the stream.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamReaderExtensions.ReadAllLinesAsync(System.IO.StreamReader)">
            <summary>
            Reads all lines of the stream.
            </summary>
            <param name="streamReader">The <see cref="T:System.IO.StreamReader"/> instance.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.StreamWriterExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.IO.StreamWriter"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamWriterExtensions.WriteAllLines(System.IO.StreamWriter,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes all lines.
            </summary>
            <param name="streamWriter">The stream writer.</param>
            <param name="lines">The lines.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StreamWriterExtensions.WriteAllLinesAsync(System.IO.StreamWriter,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Writes all lines.
            </summary>
            <param name="streamWriter">The stream writer.</param>
            <param name="lines">The lines.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.StringExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.String"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.GetBytes(System.String)">
            <summary>
            Encodes all the characters in the string into a sequence of UTF8 bytes.
            </summary>
            <param name="input">The current string.</param>
            <returns>A byte array containing the results of encoding the set of characters.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.GetBytes(System.String,System.Text.Encoding)">
            <summary>
            Encodes all the characters in the string into a sequence of bytes, using the specified <see cref="T:System.Text.Encoding"/>.
            </summary>
            <param name="input">The current string.</param>
            <param name="encoding">The <see cref="T:System.Text.Encoding"/> to use for encoding the characters.</param>
            <returns>A byte array containing the results of encoding the set of characters.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.FromBase64String(System.String)">
            <summary>
            Converts the string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.
            </summary>
            <param name="input">The current string.</param>
            <returns>An array of 8-bit unsigned integers that is equivalent to the string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.FormatWith(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.FormatWith(System.String,System.IFormatProvider,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.FormatWithInvariantCulture(System.String,System.Object[])">
            <summary>
            Replaces one or more format items in the string with the string representation of a specified object, using an <see cref="P:System.Globalization.CultureInfo.InvariantCulture"/>.
            </summary>
            <param name="format">The composite format string.</param>
            <param name="args">An object array that contains zero or more objects to format.</param>
            <returns>A copy of the string in which the format items have been replaced by the string representation of the corresponding objects in args.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.Left(System.String,System.Int32)">
            <summary>
            Returns a new string containing the specified number of characters from the left side of the current string.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in the string, the entire string is returned.</param>
            <returns>Returns a string containing a specified number of characters from the left side of the string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.Right(System.String,System.Int32)">
            <summary>
            Returns a new string containing the specified number of characters from the right side of the current string.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to return. If 0, a zero-length string ("") is returned. If greater than or equal to the number of characters in the string, the entire string is returned.</param>
            <returns>Returns a string containing a specified number of characters from the right side of the string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RemoveLeft(System.String,System.Int32)">
            <summary>
            Returns a new string in which a specified number of characters from the left side of the current string are deleted.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to remove. If greater than or equal to the number of characters in the string, an empty string is returned.</param>
            <returns>Returns a string in which a specified number of characters from the left side of the current string where deleted.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RemoveRight(System.String,System.Int32)">
            <summary>
            Returns a new string in which a specified number of characters from the right side of the current string are deleted.
            </summary>
            <param name="input">The current string.</param>
            <param name="length">The number of characters to remove. If greater than or equal to the number of characters in the string, an empty string is returned.</param>
            <returns>Returns a string in which a specified number of characters from the right side of the current string where deleted.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.Times(System.String,System.Int32)">
            <summary>
            Returns a new string by repeating the current string the specified number of times.
            </summary>
            <param name="input">The current string.</param>
            <param name="count">The number of times the current string occurs.</param>
            <returns>A new string by repeating the current string the specified number of times.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexIsMatch(System.String,System.String)">
            <summary>
            Indicates whether the regular expression finds a match in the input string using the regular expression specified in the pattern parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexIsMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Indicates whether the regular expression finds a match in the input string, using the regular expression specified in the pattern parameter and the matching options supplied in the options parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>true if the regular expression finds a match; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexMatch(System.String,System.String)">
            <summary>
            Searches the specified input string for the first occurrence of the regular expression supplied in the pattern parameter.
            </summary>
            <param name="input">The string to be tested for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexMatch(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the input string for the first occurrence of the regular expression supplied in a pattern parameter with matching options supplied in an options parameter.
            </summary>
            <param name="input">The string to be tested for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>An object that contains information about the match.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexMatches(System.String,System.String)">
            <summary>
            Searches the specified input string for all occurrences of the regular expression specified in the pattern parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match"/> objects found by the search. If no matches are found, the method returns an empty collection object.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexMatches(System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Searches the specified input string for all occurrences of the regular expression supplied in a pattern parameter with matching options supplied in an options parameter.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A collection of the <see cref="T:System.Text.RegularExpressions.Match"/> objects found by the search. If no matches are found, the method returns an empty collection object.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a specified replacement string. Specified options modify the matching operation.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="replacement">The replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator"/> delegate.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.StringExtensions.RegexReplace(System.String,System.String,System.Text.RegularExpressions.MatchEvaluator,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Within a specified input string, replaces all strings that match a specified regular expression with a string returned by a <see cref="T:System.Text.RegularExpressions.MatchEvaluator"/> delegate. Specified options modify the matching operation.
            </summary>
            <param name="input">The string to search for a match.</param>
            <param name="pattern">The regular expression pattern to match.</param>
            <param name="evaluator">A custom method that examines each match and returns either the original matched string or a replacement string.</param>
            <param name="options">A bitwise combination of the enumeration values.</param>
            <returns>A new string that is identical to the input string, except that a replacement string takes the place of each matched string.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Extensions.UriExtensions">
            <summary>
            Provides a set of static (Shared in Visual Basic) methods for <see cref="T:System.Uri"/> instances.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Extensions.UriExtensions.QueryString(System.Uri)">
            <summary>
            Gets a collection of query string values.
            </summary>
            <param name="uri">The current uri.</param>
            <returns>A collection that contains the query string values.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest">
            <summary>
            Represents the contents of the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest.Current">
            <summary>
            Gets the current <see cref="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest"/> instance.
            </summary>
            <value>The current <see cref="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest"/> instance.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest.AppPlatformVersion">
            <summary>
            Gets or sets the version of the Windows Phone SDK or the runtime binaries of the platform. The default value is 8.0 for Windows Phone 8 and 7.1 for Windows Phone OS 7.1.
            </summary>
            <value>The version of the Windows Phone SDK or the runtime binaries of the platform.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest.DefaultLanguage">
            <summary>
            Gets or sets the application default language.
            </summary>
            <value>The application default language.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest.Languages">
            <summary>
            Gets or sets the application supported languages.
            </summary>
            <value>The application supported languages.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifest.App">
            <summary>
            Gets or sets the app detailed information.
            </summary>
            <value>The app detailed information.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode">
            <summary>
            Represents the app detailed information in the application manifest.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode"/> class.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Author">
            <summary>
            Gets or sets the app author’s name.
            </summary>
            <value>The app author’s name.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.BitsPerPixel">
            <summary>
            Gets or sets the bits per pixel of the app. 16 or 32 bits per pixel.
            </summary>
            <value>The bits per pixel of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Description">
            <summary>
            Gets or sets the description of the app.
            </summary>
            <value>The description of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Genre">
            <summary>
            Gets or sets the app genre. The default value is either Apps.Normal or Apps.Game depending on the project type.
            </summary>
            <value>The app genre.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.HasSettings">
            <summary>
            Gets or sets a value indicating whether the app supports settings.
            </summary>
            <value>true if the app supports settings; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.HubType">
            <summary>
            Gets or sets the hub type of the app. Enables your app to appear in the Extras section of the Music + Videos Hub. It is used for testing before app submission, and must be manually entered in the manifest file. A value of 1 enables this functionality.
            </summary>
            <value>The hub type of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.IsBeta">
            <summary>
            Gets or sets a value indicating whether the app is a beta app. This has consequences for the app license.
            </summary>
            <value>true if the app is a beta app; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.ProductId">
            <summary>
            Gets or sets the app product id. The default value is the GUID for the project (128 bit). During the app submission process, a new product ID is inserted into the manifest file.
            </summary>
            <value>The app product id.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Publisher">
            <summary>
            Gets or sets the publisher of the app. This default value is the name of the project. This attribute is required for certain types of apps, such as push-enabled apps.
            </summary>
            <value>The publisher of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.PublisherId">
            <summary>
            Gets or sets the publisher id of the app. The default value is the GUID for the project (128 bit). During the app submission process, a new product ID is inserted into the manifest file.
            </summary>
            <value>The publisher id of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Title">
            <summary>
            Gets or sets the title of the app that appears in the app list or Games Hub. The default value is the name of the project.
            </summary>
            <value>The title of the app that appears in the app list or Games Hub.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Version">
            <summary>
            Gets or sets the app version. The default value is 1.0.0.0.
            </summary>
            <value>The app version.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.IconPath">
            <summary>
            Gets or sets the location of the app icon that is visible in the app list. The attributes are for internal use only.
            </summary>
            <value>The location of the app icon that is visible in the app list.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Capabilities">
            <summary>
            Gets or sets the software capability requirements of the app.
            </summary>
            <value>The software capabilities requirements of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.ScreenResolutions">
            <summary>
            Gets or sets the resolutions that the app supports.
            </summary>
            <value>The resolutions that the app supports.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Requirements">
            <summary>
            Gets or sets the hardware requirements of the app.
            </summary>
            <value>The hardware requirements of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Tasks">
            <summary>
            Gets or sets the tasks of the app.
            </summary>
            <value>The tasks of the app.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestAppNode.Tokens">
            <summary>
            Gets or sets the tokens of the app.
            </summary>
            <value>The tokens of the app.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestIconPathNode">
            <summary>
            Represents the location of the app icon that is visible in the app list.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestIconPathNode.IsRelative">
            <summary>
            Gets or sets a value indicating whether the icon location is relative.
            </summary>
            <value>true if the icon location is relative; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestIconPathNode.IsResource">
            <summary>
            Gets or sets a value indicating whether the icon is a resource.
            </summary>
            <value>true if the icon is a resource; otherwise false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestIconPathNode.Value">
            <summary>
            Gets or sets the icon location.
            </summary>
            <value>The icon location.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestLanguageNode">
            <summary>
            Represents a language in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestLanguageNode.Code">
            <summary>
            Gets or sets the language code.
            </summary>
            <value>The language code.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestNamedNode">
            <summary>
            Represents a named node in the application manifest.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestNamedNode.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestNamedNode"/> class.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestNamedNode.Values">
            <summary>
            Gets the list of values for this named node.
            </summary>
            <value>The list of values for this named node.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTaskNode">
            <summary>
            Represents a task in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTaskNode.Name">
            <summary>
            Gets or sets the name of the task.
            </summary>
            <value>The name of the task.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTaskNode.NavigationPage">
            <summary>
            Gets or sets the page to navigate.
            </summary>
            <value>The page to navigate.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTokenNode">
            <summary>
            Represents a token in the application manifest.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTokenNode.TokenId">
            <summary>
            Gets or sets the token id.
            </summary>
            <value>The token id.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.ApplicationManifestTokenNode.TaskName">
            <summary>
            Gets or sets the token task name.
            </summary>
            <value>The token task name.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.MutexLock">
            <summary>
            Allows for inter-process locking and synchronization.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.MutexLock.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.MutexLock"/> class.
            </summary>
            <param name="name">The name of the Mutex.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.MutexLock.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.MutexLock"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.MutexLock.Lock">
            <summary>
            Locks the Mutex and returns an <see cref="T:System.IDisposable"/> object that when disposed will release the Mutex.
            </summary>
            <returns>An <see cref="T:System.IDisposable"/> object that when disposed will release the Mutex.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.MutexLock.Dispose">
            <summary>
            Releases the resources allocated by this <see cref="T:Cimbalino.Phone.Toolkit.Helpers.MutexLock"/> instance.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1">
            <summary>
            Optimized version of the <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> class.
            </summary>
            <typeparam name="T">The type of items in the collection.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> class.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Raises the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> event with the provided event data.
            </summary>
            <param name="e">The event data to report in the event.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Adds the specified items collection to the current <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> instance.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.ReplaceWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Replaces the current <see cref="T:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1"/> instance items with the ones specified in the items collection.
            </summary>
            <param name="items">The collection from which the items are copied.</param>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.OptimizedObservableCollection`1.SuppressEvents">
            <summary>
            Gets or sets a value indicating whether the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> events are raised.
            </summary>
            <value>true if the <see cref="E:System.Collections.ObjectModel.ObservableCollection`1.CollectionChanged"/> events are raised; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3">
            <summary>
            Implements a weak event listener that allows the owner to be garbage
            collected if its only remaining link is an event handler.
            </summary>
            <typeparam name="TInstance">Type of instance listening for the event.</typeparam>
            <typeparam name="TSource">Type of source for the event.</typeparam>
            <typeparam name="TEventArgs">Type of event arguments for the event.</typeparam>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3._weakInstance">
            <summary>
            WeakReference to the instance listening for the event.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3.#ctor(`0)">
            <summary>
            Initializes a new instances of the WeakEventListener class.
            </summary>
            <param name="instance">Instance subscribing to the event.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3.OnEvent(`1,`2)">
            <summary>
            Handler for the subscribed event calls OnEventAction to handle it.
            </summary>
            <param name="source">Event source.</param>
            <param name="eventArgs">Event arguments.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3.Detach">
            <summary>
            Detaches from the subscribed event.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3.OnEventAction">
            <summary>
            Gets or sets the method to call when the event fires.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Helpers.WeakEventListener`3.OnDetachAction">
            <summary>
            Gets or sets the method to call when detaching from the event.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ApplicationManifestService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IApplicationManifestService"/>.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IApplicationManifestService">
            <summary>
            Represents a service capable of reading from the application manifest.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationManifestService.GetApplicationManifest">
            <summary>
            Gets the application manifest for the active app.
            </summary>
            <returns>The application manifest for the active app.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationManifestService.GetApplicationManifest">
            <summary>
            Gets the application manifest for the active app.
            </summary>
            <returns>The application manifest for the active app.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ApplicationProfileService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IApplicationProfileService"/>.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IApplicationProfileService">
            <summary>
            Represents a service capable of providing profile information about an app.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IApplicationProfileService.Mode">
            <summary>
            Gets a value that indicates the mode that an app is running in.
            </summary>
            <value>A value that indicates the mode that an app is running in.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ApplicationProfileService.Mode">
            <summary>
            Gets a value that indicates the mode that an app is running in.
            </summary>
            <value>A value that indicates the mode that an app is running in.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ApplicationProfileServiceMode">
            <summary>
            Describes the application profile mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ApplicationProfileServiceMode.Unknown">
            <summary>
            The application is running in an unknown mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ApplicationProfileServiceMode.Default">
            <summary>
            The application is running in default mode.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ApplicationProfileServiceMode.KidsCorner">
            <summary>
            The application is running under kids corner.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService"/>.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService">
            <summary>
            Represents a service capable of handling the application settings.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.Get``1(System.String,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value to return if the key does not exist.</param>
            <returns>The value associated with the specified key, if the key is found; otherwise, the specified default value.</returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.Set``1(System.String,``0)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="T">The type of value to set.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.Reset(System.String)">
            <summary>
            Removes the specified key and associated value.
            </summary>
            <param name="key">The key whose value to reset.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.Save">
            <summary>
            Saves this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance.
            </summary>
            <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> does not have enough available free space.</exception>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IApplicationSettingsService.IsDirty">
            <summary>
            Gets a value indicating whether this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance has changed.
            </summary>
            <value>true if this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance has changed; otherwise, false.</value>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService"/> class.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.Get``1(System.String)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <returns>
            The value associated with the specified key, if the key is found; otherwise, the default value for the type of the value parameter.
            </returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.Get``1(System.String,``0)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <param name="key">The key whose value to get.</param>
            <param name="defaultValue">The default value to return if the key does not exist.</param>
            <returns>
            The value associated with the specified key, if the key is found; otherwise, the specified default value.
            </returns>
            <typeparam name="T">The type of value to get.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.Set``1(System.String,``0)">
            <summary>
            Sets the value for the specified key. If the entry does not exist, a new one will be added.
            </summary>
            <param name="key">The key whose value to set.</param>
            <param name="value">The value for the specified key.</param>
            <typeparam name="T">The type of value to set.</typeparam>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.Reset(System.String)">
            <summary>
            Removes the specified key and associated value.
            </summary>
            <param name="key">The key whose value to reset.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.Save">
            <summary>
            Saves this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance.
            </summary>
            <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">The <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile"/> does not have enough available free space.</exception>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ApplicationSettingsService.IsDirty">
            <summary>
            Gets a value indicating whether this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance has changed.
            </summary>
            <value>
            true if this <see cref="T:System.IO.IsolatedStorage.IsolatedStorageSettings"/> instance has changed; otherwise, false.
            </value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.AsyncStorageService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService"/>.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService">
            <summary>
            Represents a service capable of handling the application storage asynchronously.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.CopyFileAsync(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.CopyFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.CreateDirectoryAsync(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.CreateFileAsync(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.DeleteDirectoryAsync(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.DeleteFileAsync(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.DirectoryExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.FileExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.GetDirectoryNamesAsync">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.GetDirectoryNamesAsync(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.GetFileNamesAsync">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.GetFileNamesAsync(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.OpenFileForReadAsync(System.String)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.ReadAllTextAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.ReadAllTextAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.ReadAllLinesAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.ReadAllLinesAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.ReadAllBytesAsync(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.WriteAllTextAsync(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.WriteAllTextAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.WriteAllBytesAsync(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IAsyncStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.CopyFileAsync(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.CopyFileAsync(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.CreateDirectoryAsync(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.CreateFileAsync(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.DeleteDirectoryAsync(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.DeleteFileAsync(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.DirectoryExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.FileExistsAsync(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.GetDirectoryNamesAsync">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.GetDirectoryNamesAsync(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.GetFileNamesAsync">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.GetFileNamesAsync(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.OpenFileForReadAsync(System.String)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.ReadAllTextAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.ReadAllTextAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.ReadAllLinesAsync(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.ReadAllLinesAsync(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.ReadAllBytesAsync(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.WriteAllTextAsync(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.WriteAllTextAsync(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.WriteAllLinesAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.WriteAllBytesAsync(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.AsyncStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
            <returns>The <see cref="T:System.Threading.Tasks.Task"/> object representing the asynchronous operation.</returns>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.DeviceStatusService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService"/>.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService">
            <summary>
            Represents a service capable of obtaining information about the device on which it is running.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.ApplicationCurrentMemoryUsage">
            <summary>
            Gets the memory usage of the current application in bytes.
            </summary>
            <value>The memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.ApplicationMemoryUsageLimit">
            <summary>
            Gets the maximum amount of memory that your application process can allocate.
            </summary>
            <value>The maximum amount of memory that your application process can allocate.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.ApplicationPeakMemoryUsage">
            <summary>
            Gets the peak memory usage of the current application in bytes.
            </summary>
            <value>The peak memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.DeviceFirmwareVersion">
            <summary>
            Gets the firmware version running on the device.
            </summary>
            <value>The firmware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.DeviceHardwareVersion">
            <summary>
            Gets the hardware version running on the device.
            </summary>
            <value>The hardware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.DeviceManufacturer">
            <summary>
            Gets the device manufacturer name.
            </summary>
            <value>The device manufacturer name.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.DeviceName">
            <summary>
            Gets the device name.
            </summary>
            <value>The device name.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.DeviceTotalMemory">
            <summary>
            Gets the physical RAM size of the device in bytes.
            </summary>
            <value>The physical RAM size of the device in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.IsLowMemoryDevice">
            <summary>
            Gets a value indicating whether the device is a low memory device (less than 256 MB of memory installed).
            </summary>
            <value>true if the device is a low memory device (less than 256 MB of memory installed); otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.IsKeyboardDeployed">
            <summary>
            Gets a value indicating whether the user has deployed the physical hardware keyboard of the device.
            </summary>
            <value>true if the keyboard is deployed; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.IsKeyboardPresent">
            <summary>
            Gets a value indicating whether the device contains a physical hardware keyboard.
            </summary>
            <value>true if the device contains a physical hardware keyboard; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IDeviceStatusService.PowerSource">
            <summary>
            Gets the a value indicating whether the device is currently running on battery power or is plugged in to an external power supply.
            </summary>
            <value>true if the device is currently running on battery power or is plugged in to an external power supply; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.ApplicationCurrentMemoryUsage">
            <summary>
            Gets the memory usage of the current application in bytes.
            </summary>
            <value>The memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.ApplicationMemoryUsageLimit">
            <summary>
            Gets the maximum amount of memory that your application process can allocate.
            </summary>
            <value>
            The maximum amount of memory that your application process can allocate.
            </value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.ApplicationPeakMemoryUsage">
            <summary>
            Gets the peak memory usage of the current application in bytes.
            </summary>
            <value>The peak memory usage of the current application in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.DeviceFirmwareVersion">
            <summary>
            Gets the firmware version running on the device.
            </summary>
            <value>The firmware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.DeviceHardwareVersion">
            <summary>
            Gets the hardware version running on the device.
            </summary>
            <value>The hardware version running on the device.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.DeviceManufacturer">
            <summary>
            Gets the device manufacturer name.
            </summary>
            <value>The device manufacturer name.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.DeviceName">
            <summary>
            Gets the device name.
            </summary>
            <value>The device name.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.DeviceTotalMemory">
            <summary>
            Gets the physical RAM size of the device in bytes.
            </summary>
            <value>The physical RAM size of the device in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.IsLowMemoryDevice">
            <summary>
            Gets a value indicating whether the device is a low memory device (less than 256 MB of memory installed).
            </summary>
            <value>
            true if the device is a low memory device (less than 256 MB of memory installed); otherwise, false.
            </value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.IsKeyboardDeployed">
            <summary>
            Gets a value indicating whether the user has deployed the physical hardware keyboard of the device.
            </summary>
            <value>true if the keyboard is deployed; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.IsKeyboardPresent">
            <summary>
            Gets a value indicating whether the device contains a physical hardware keyboard.
            </summary>
            <value>
            true if the device contains a physical hardware keyboard; otherwise, false.
            </value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.DeviceStatusService.PowerSource">
            <summary>
            Gets the a value indicating whether the device is currently running on battery power or is plugged in to an external power supply.
            </summary>
            <value>
            true if the device is currently running on battery power or is plugged in to an external power supply; otherwise, false.
            </value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.INetworkInformationService">
            <summary>
            Represents a service capable of providing network information for a specific Windows Phone device.
            </summary>
        </member>
        <member name="E:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.NetworkAvailabilityChanged">
            <summary>
            Occurs when the availability of the network changes.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.CellularMobileOperator">
            <summary>
            Gets the name of the cellular mobile operator.
            </summary>
            <value>The name of the cellular mobile operator.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.IsCellularDataEnabled">
            <summary>
            Gets a value indicating whether the network is cellular data enabled.
            </summary>
            <value>true if the network is cellular data enabled; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.IsCellularDataRoamingEnabled">
            <summary>
            Gets a value indicating whether the network allows data roaming.
            </summary>
            <value>true if the network allows data roaming; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.IsNetworkAvailable">
            <summary>
            Gets a value indicating whether the network is available.
            </summary>
            <value>true if the network is available; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.INetworkInformationService.IsWiFiEnabled">
            <summary>
            Gets a value indicating whether the network is Wi-Fi enabled.
            </summary>
            <value>true if the network is Wi-Fi enabled; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IScreenInfoService">
            <summary>
            Represents a service capable of retrieving device resolution information.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IScreenInfoService.ScaleFactor">
            <summary>
            Gets a value indicating the device scale factor.
            </summary>
            <value>The device scale factor.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IScreenInfoService.Resolution">
            <summary>
            Gets the device resolution.
            </summary>
            <value>Returns a <see cref="T:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution"/> enumeration indicating the device resolution.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IShellTileService">
            <summary>
            Represents a service capable of managing the Application Tile and secondary Tiles for an application. 
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IShellTileService.Create(System.Uri,Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData,System.Boolean)">
            <summary>
            Creates a new secondary tile.
            </summary>
            <param name="navigationUri"><see cref="T:System.Uri"/> for the tile being created. The <see cref="T:System.Uri"/> can contain custom launch parameters.</param>
            <param name="initialTileData">Text and image information for the tile being created.</param>
            <param name="supportsWideTile">true if the wide tile size is supported; otherwise, false.</param>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IShellTileService.LiveTilesSupported">
            <summary>
            Gets a value indicating whether live tiles are supported.
            </summary>
            <value>true if live tiles are supported; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IShellTileService.ActiveTiles">
            <summary>
            Gets the collection of an applications tiles pinned to Start.
            </summary>
            <value>The collection of an applications tiles pinned to Start.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTile">
            <summary>
            Represents an object capable of managing a Tile for an application.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTile.Update(Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData)">
            <summary>
            Updates an Application Tile or secondary Tile.
            </summary>
            <param name="data">New text and image data for the tile.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTile.Delete">
            <summary>
            Unpins and deletes a secondary tile.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTile.NavigationUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> and launch parameter this is navigated to when a secondary tile is tapped.
            </summary>
            <value>The <see cref="T:System.Uri"/> and launch parameter this is navigated to when a secondary tile is tapped.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData">
            <summary>
            Represents an object capable of handling tile data.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData.Title">
            <summary>
            Gets or sets the text to display in the tile.
            </summary>
            <value>The text to display in the tile.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IShellToastService">
            <summary>
            Represents a service capable of showing toast messages.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IShellToastService.Show(System.String,System.String)">
            <summary>
            Display a toast message with the specified title and content.
            </summary>
            <param name="title">The title of the toast message.</param>
            <param name="content">The contents of the toast message.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IShellToastService.Show(System.String,System.String,System.Uri)">
            <summary>
            Display a toast message with the specified title and content.
            </summary>
            <param name="title">The title of the toast message.</param>
            <param name="content">The contents of the toast message.</param>
            <param name="navigationUri">Uri to navigate to if the user taps the toast message.</param>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.IStorageService">
            <summary>
            Represents a service capable of handling the application storage.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.CopyFile(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.CreateDirectory(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.CreateFile(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>A new storage file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.DeleteDirectory(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.DeleteFile(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.DirectoryExists(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>true if path refers to an existing directory in the store and is not null; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.FileExists(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>true if path refers to an existing file in the store and is not null; otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.GetDirectoryNames">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>An <see cref="T:System.Array"/> of relative paths of directories in the root of the store. A zero-length array specifies that there are no directories in the root.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.GetDirectoryNames(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>An <see cref="T:System.Array"/> of the relative paths of directories in the storage scope that match searchPattern. A zero-length array specifies that there are no directories that match.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.GetFileNames">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>An <see cref="T:System.Array"/> of relative paths of files in the root of the store. A zero-length array specifies that there are no files in the root.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.GetFileNames(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>An <see cref="T:System.Array"/> of relative paths of files in the storage scope that match searchPattern. A zero-length array specifies that there are no files that match.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.IncreaseQuotaTo(System.Int64)">
            <summary>
            Enables an application to explicitly request a larger quota size, in bytes.
            </summary>
            <param name="newQuotaSize">The requested size, in bytes.</param>
            <returns>true if the new quota is accepted by the user, otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.MoveDirectory(System.String,System.String)">
            <summary>
            Moves a specified directory and its contents to a new location.
            </summary>
            <param name="sourceDirectoryName">The name of the directory to move.</param>
            <param name="destinationDirectoryName">The path to the new location for sourceDirectoryName. This cannot be the path to an existing directory.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.MoveFile(System.String,System.String)">
            <summary>
            Moves a specified file to a new location, and optionally lets you specify a new file name.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The path to the new location for the file. If a file name is included, the moved file will have that name.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.OpenFile(System.String,System.IO.FileMode)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <returns>A file that is opened in the specified mode, with read/write access, and is unshared.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file in the specified mode with the specified file access.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <param name="access">The type of access to open the file with.</param>
            <returns>A file that is opened in the specified mode and access, and is unshared.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <param name="access">The type of access to open the file with.</param>
            <param name="share">The type of access other <see cref="T:System.IO.Stream"/> objects have to this file.</param>
            <returns>A file that is opened in the specified mode and access, and with the specified sharing options.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadLines(System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Reads the lines of a file that has a specified encoding.
            </summary>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadAllLines(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A byte array containing the contents of the file. Returns null, if an exception is raised.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.IStorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IStorageService.AvailableFreeSpace">
            <summary>
            Gets a value that represents the amount of free space available for storage.
            </summary>
            <value>The available free storage space, in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.IStorageService.Quota">
            <summary>
            Gets a value that represents the maximum amount of space available for storage.
            </summary>
            <value>The limit of storage space, in bytes.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.NetworkInformationService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.INetworkInformationService"/>.
            </summary>
        </member>
        <member name="E:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.NetworkAvailabilityChanged">
            <summary>
            Occurs when the availability of the network changes.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.CellularMobileOperator">
            <summary>
            Gets the name of the cellular mobile operator.
            </summary>
            <value>The name of the cellular mobile operator.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.IsCellularDataEnabled">
            <summary>
            Gets a value indicating whether the network is cellular data enabled.
            </summary>
            <value>true if the network is cellular data enabled; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.IsCellularDataRoamingEnabled">
            <summary>
            Gets a value indicating whether the network allows data roaming.
            </summary>
            <value>true if the network allows data roaming; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.IsNetworkAvailable">
            <summary>
            Gets a value indicating whether the network is available.
            </summary>
            <value>true if the network is available; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.NetworkInformationService.IsWiFiEnabled">
            <summary>
            Gets a value indicating whether the network is Wi-Fi enabled.
            </summary>
            <value>true if the network is Wi-Fi enabled; otherwise, false.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ScreenInfoService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IScreenInfoService"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ScreenInfoService.ScaleFactor">
            <summary>
            Gets a value indicating the device scale factor.
            </summary>
            <value>The device scale factor.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ScreenInfoService.Resolution">
            <summary>
            Gets the device resolution.
            </summary>
            <value>Returns a <see cref="T:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution"/> enumeration indicating the device resolution.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution">
            <summary>
            Describes the device resolution.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution.Unknown">
            <summary>
            The device has an unknown resolution.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution.WVGA">
            <summary>
            The device has a WVGA (480x800) resolution.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution.HD720p">
            <summary>
            The device has a HD 720p (720x1280) resolution.
            </summary>
        </member>
        <member name="F:Cimbalino.Phone.Toolkit.Services.ScreenInfoServiceResolution.WXGA">
            <summary>
            The device has a WXGA (768x1280) resolution.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IShellTileService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ShellTileService.Create(System.Uri,Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData,System.Boolean)">
            <summary>
            Creates a new secondary tile.
            </summary>
            <param name="navigationUri"><see cref="T:System.Uri"/> for the tile being created. The <see cref="T:System.Uri"/> can contain custom launch parameters.</param>
            <param name="initialTileData">Text and image information for the tile being created.</param>
            <param name="supportsWideTile">true if the wide tile size is supported; otherwise, false.</param>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileService.LiveTilesSupported">
            <summary>
            Gets a value indicating whether live tiles are supported.
            </summary>
            <value>true if live tiles are supported; otherwise, false.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileService.ActiveTiles">
            <summary>
            Gets the collection of an applications tiles pinned to Start.
            </summary>
            <value>The collection of an applications tiles pinned to Start.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceCycleTileData">
            <summary>
            Describes a Tile template that cycles between 1 to 9 background images.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTileDataBase">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData"/>.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTileDataBase.Title">
            <summary>
            Gets or sets the text to display in the tile.
            </summary>
            <value>The text to display in the tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceCycleTileData.Count">
            <summary>
            Gets or sets a value between 1 and 99 that will be displayed in the Count field of the Tile. A value of 0 means the Count will not be displayed. If this property is not set, the Count display will not change during an update.
            </summary>
            <value>A value between 1 and 99 that will be displayed in the Count field of the Tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceCycleTileData.CycleImages">
            <summary>
            Gets or sets a collection of up to 9 background images for the medium and wide Tile sizes.
            </summary>
            <value>A collection of up to 9 background images for the medium and wide Tile sizes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceCycleTileData.SmallBackgroundImage">
            <summary>
            Gets or sets the front-side background image for the small Tile size.
            </summary>
            <value>The front-side background image for the small Tile size.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceFlipTileData">
            <summary>
            Describes a Tile template that flips from the front to the back side. Allows customization of the background image and text for both the front and back Tile.
            </summary>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData">
            <summary>
            Data for a tile pinned to Start. Tiles have a ‘front’ and ‘back’ to them and this class holds all this data.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData.BackBackgroundImage">
            <summary>
            Gets or sets the background image of the back of the Tile. If this property is an empty Uri, the background image of the back of the tile will not change during an update.
            </summary>
            <value>The background image of the back of the Tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData.BackContent">
            <summary>
            Gets or sets the text to display on the back of the tile, above the title. If this property is an empty string, the content on the back of the tile will not change during an update.
            </summary>
            <value>The text to display on the back of the tile, above the title.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData.BackgroundImage">
            <summary>
            Gets or sets the background image of the front of the Tile. If this property is an empty Uri, the background image of the front of the tile will not change during an update.
            </summary>
            <value>The background image of the front of the Tile. If this property is an empty Uri, the background image of the front of the tile will not change during an update.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData.BackTitle">
            <summary>
            Gets or sets the title to display at the bottom of the back of the Tile. If this property is an empty string, the title of the back of the tile will not change during an update.
            </summary>
            <value>The title to display at the bottom of the back of the Tile. If this property is an empty string, the title of the back of the tile will not change during an update.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceStandardTileData.Count">
            <summary>
            Gets or sets a value between 1 and 99 that will be displayed in the Count field of the Tile. A value of 0 means the Count will not be displayed. If this property is not set, the Count display will not change during an update.
            </summary>
            <value>A value between 1 and 99 that will be displayed in the Count field of the Tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceFlipTileData.SmallBackgroundImage">
            <summary>
            Gets or sets the front-side background image for the small Tile size.
            </summary>
            <value>The front-side background image for the small Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceFlipTileData.WideBackgroundImage">
            <summary>
            Gets or sets the back-side background image for the wide Tile size.
            </summary>
            <value>The back-side background image for the wide Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceFlipTileData.WideBackBackgroundImage">
            <summary>
            Gets or sets the text that displays above the title, on the back-side of the wide Tile size.
            </summary>
            <value>The text that displays above the title, on the back-side of the wide Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceFlipTileData.WideBackContent">
            <summary>
            Gets or sets the front-side background image for the wide Tile size.
            </summary>
            <value>The front-side background image for the wide Tile size.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData">
            <summary>
            Describes an iconic Tile template.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.BackgroundColor">
            <summary>
            Gets or sets the background color of the Tile. Setting this property overrides the default theme color that is set on the phone.
            </summary>
            <value>The background color of the Tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.Count">
            <summary>
            Gets or sets a value between 1 and 99 that will be displayed in the Count field of the Tile. A value of 0 means the Count will not be displayed. If this property is not set, the Count display will not change during an update.
            </summary>
            <value>A value between 1 and 99 that will be displayed in the Count field of the Tile.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.IconImage">
            <summary>
            Gets or sets the icon image for the medium and large Tile sizes.
            </summary>
            <value>The icon image for the medium and large Tile sizes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.SmallIconImage">
            <summary>
            Gets or sets the icon image for the small Tile size.
            </summary>
            <value>The icon image for the small Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.WideContent1">
            <summary>
            Gets or sets the text that displays on the first row of the wide Tile size.
            </summary>
            <value>The text that displays on the first row of the wide Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.WideContent2">
            <summary>
            Gets or sets the text that displays on the second row of the wide Tile size.
            </summary>
            <value>The text that displays on the second row of the wide Tile size.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceIconicTileData.WideContent3">
            <summary>
            Gets or sets the text that displays on the third row of the wide Tile size.
            </summary>
            <value>The text that displays on the third row of the wide Tile size.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTile">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IShellTileServiceTile"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTile.Update(Cimbalino.Phone.Toolkit.Services.IShellTileServiceTileData)">
            <summary>
            Updates an Application Tile or secondary Tile.
            </summary>
            <param name="data">New text and image data for the tile.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTile.Delete">
            <summary>
            Unpins and deletes a secondary tile.
            </summary>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.ShellTileServiceTile.NavigationUri">
            <summary>
            Gets the <see cref="T:System.Uri"/> and launch parameter this is navigated to when a secondary tile is tapped.
            </summary>
            <value>The <see cref="T:System.Uri"/> and launch parameter this is navigated to when a secondary tile is tapped.</value>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.ShellToastService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IShellToastService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ShellToastService.Show(System.String,System.String)">
            <summary>
            Display a toast message with the specified title and content.
            </summary>
            <param name="title">The title of the toast message.</param>
            <param name="content">The contents of the toast message.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.ShellToastService.Show(System.String,System.String,System.Uri)">
            <summary>
            Display a toast message with the specified title and content.
            </summary>
            <param name="title">The title of the toast message.</param>
            <param name="content">The contents of the toast message.</param>
            <param name="navigationUri">Uri to navigate to if the user taps the toast message.</param>
        </member>
        <member name="T:Cimbalino.Phone.Toolkit.Services.StorageService">
            <summary>
            Represents an implementation of the <see cref="T:Cimbalino.Phone.Toolkit.Services.IStorageService"/>.
            </summary>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.CopyFile(System.String,System.String)">
            <summary>
            Copies an existing file to a new file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory or an existing file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.CopyFile(System.String,System.String,System.Boolean)">
            <summary>
            Copies an existing file to a new file, and optionally overwrites an existing file.
            </summary>
            <param name="sourceFileName">The name of the file to copy.</param>
            <param name="destinationFileName">The name of the destination file. This cannot be a directory.</param>
            <param name="overwrite">true if the destination file can be overwritten; otherwise, false.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.CreateDirectory(System.String)">
            <summary>
            Creates a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to create within the storage.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.CreateFile(System.String)">
            <summary>
            Creates a file in the store.
            </summary>
            <param name="path">The relative path of the file to be created in the store.</param>
            <returns>A new storage file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.DeleteDirectory(System.String)">
            <summary>
            Deletes a directory in the storage scope.
            </summary>
            <param name="dir">The relative path of the directory to delete within the storage scope.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.DeleteFile(System.String)">
            <summary>
            Deletes the specified file.
            </summary>
            <param name="path">The name of the file to be deleted. Wildcard characters are not supported.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.DirectoryExists(System.String)">
            <summary>
            Determines whether the specified path refers to an existing directory in the store.
            </summary>
            <param name="dir">The path to test.</param>
            <returns>
            true if path refers to an existing directory in the store and is not null; otherwise, false.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.FileExists(System.String)">
            <summary>
            Determines whether the specified path refers to an existing file in the store.
            </summary>
            <param name="path">The path and file name to test.</param>
            <returns>
            true if path refers to an existing file in the store and is not null; otherwise, false.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.GetDirectoryNames">
            <summary>
            Enumerates the directories in the root of a store.
            </summary>
            <returns>
            An <see cref="T:System.Array"/> of relative paths of directories in the root of the store. A zero-length array specifies that there are no directories in the root.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.GetDirectoryNames(System.String)">
            <summary>
            Enumerates directories in a storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>
            An <see cref="T:System.Array"/> of the relative paths of directories in the storage scope that match searchPattern. A zero-length array specifies that there are no directories that match.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.GetFileNames">
            <summary>
            Obtains the names of files in the root of a store.
            </summary>
            <returns>
            An <see cref="T:System.Array"/> of relative paths of files in the root of the store. A zero-length array specifies that there are no files in the root.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.GetFileNames(System.String)">
            <summary>
            Enumerates files in storage scope that match a given pattern.
            </summary>
            <param name="searchPattern">A search pattern. Both single-character ("?") and multi-character ("*") wildcards are supported.</param>
            <returns>
            An <see cref="T:System.Array"/> of relative paths of files in the storage scope that match searchPattern. A zero-length array specifies that there are no files that match.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.IncreaseQuotaTo(System.Int64)">
            <summary>
            Enables an application to explicitly request a larger quota size, in bytes.
            </summary>
            <param name="newQuotaSize">The requested size, in bytes.</param>
            <returns>true if the new quota is accepted by the user, otherwise, false.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.MoveDirectory(System.String,System.String)">
            <summary>
            Moves a specified directory and its contents to a new location.
            </summary>
            <param name="sourceDirectoryName">The name of the directory to move.</param>
            <param name="destinationDirectoryName">The path to the new location for sourceDirectoryName. This cannot be the path to an existing directory.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.MoveFile(System.String,System.String)">
            <summary>
            Moves a specified file to a new location, and optionally lets you specify a new file name.
            </summary>
            <param name="sourceFileName">The name of the file to move.</param>
            <param name="destinationFileName">The path to the new location for the file. If a file name is included, the moved file will have that name.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.OpenFile(System.String,System.IO.FileMode)">
            <summary>
            Opens a file in the specified mode.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <returns>
            A file that is opened in the specified mode, with read/write access, and is unshared.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)">
            <summary>
            Opens a file in the specified mode with the specified file access.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <param name="access">The type of access to open the file with.</param>
            <returns>
            A file that is opened in the specified mode and access, and is unshared.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.
            </summary>
            <param name="path">The relative path of the file within the store.</param>
            <param name="mode">The mode in which to open the file.</param>
            <param name="access">The type of access to open the file with.</param>
            <param name="share">The type of access other <see cref="T:System.IO.Stream"/> objects have to this file.</param>
            <returns>
            A file that is opened in the specified mode and access, and with the specified sharing options.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadAllText(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadAllText(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadLines(System.String)">
            <summary>
            Reads the lines of a file.
            </summary>
            <param name="path">The file to read.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadLines(System.String,System.Text.Encoding)">
            <summary>
            Reads the lines of a file that has a specified encoding.
            </summary>
            <param name="path">The file to read.</param>
            <param name="encoding">The encoding that is applied to the contents of the file.</param>
            <returns>The lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadAllLines(System.String)">
            <summary>
            Opens a text file, reads all lines of the file, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadAllLines(System.String,System.Text.Encoding)">
            <summary>
            Opens a file, reads all lines of the file with the specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to open for reading.</param>
            <param name="encoding">The encoding applied to the contents of the file.</param>
            <returns>A string array containing all lines of the file.</returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.ReadAllBytes(System.String)">
            <summary>
            Opens a binary file, reads the contents of the file into a byte array, and then closes the file. Returns null, if an exception is raised.
            </summary>
            <param name="path">The file to open for reading.</param>
            <returns>
            A byte array containing the contents of the file. Returns null, if an exception is raised.
            </returns>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.WriteAllText(System.String,System.String)">
            <summary>
            Creates a new file, writes the specified string to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.WriteAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Creates a new file, writes the specified string to the file using the specified encoding, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The string to write to the file.</param>
            <param name="encoding">The encoding to apply to the string.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new file, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Creates a new file by using the specified encoding, writes a collection of strings to the file, and then closes the file.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="contents">The lines to write to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.WriteAllBytes(System.String,System.Byte[])">
            <summary>
            Creates a new file, writes the specified byte array to the file, and then closes the file. If the target file already exists, it is overwritten.
            </summary>
            <param name="path">The file to write to.</param>
            <param name="bytes">The bytes to write to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.AppendAllText(System.String,System.String)">
            <summary>
            Opens a file, appends the specified string to the file, and then closes the file. If the file does not exist, this method creates a file, writes the specified string to the file, then closes the file.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.AppendAllText(System.String,System.String,System.Text.Encoding)">
            <summary>
            Appends the specified string to the file, creating the file if it does not already exist.
            </summary>
            <param name="path">The file to append the specified string to.</param>
            <param name="contents">The string to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Appends lines to a file, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
        </member>
        <member name="M:Cimbalino.Phone.Toolkit.Services.StorageService.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
            <summary>
            Appends lines to a file by using a specified encoding, and then closes the file.
            </summary>
            <param name="path">The file to append the lines to. The file is created if it does not already exist.</param>
            <param name="contents">The lines to append to the file.</param>
            <param name="encoding">The character encoding to use.</param>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.StorageService.AvailableFreeSpace">
            <summary>
            Gets a value that represents the amount of free space available for storage.
            </summary>
            <value>The available free storage space, in bytes.</value>
        </member>
        <member name="P:Cimbalino.Phone.Toolkit.Services.StorageService.Quota">
            <summary>
            Gets a value that represents the maximum amount of space available for storage.
            </summary>
            <value>The limit of storage space, in bytes.</value>
        </member>
        <member name="T:System.Security.Cryptography.HMACMD5">
            <summary>
            Computes a Hash-based Message Authentication Code (HMAC) using the <see cref="T:xBrainLab.Security.Cryptography.MD5" /> hash function
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACMD5"/> class using the supplied key with UT8 encoding.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.#ctor(System.String,System.Text.Encoding)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACMD5"/> class using the supplied key with supplied encoding.
            </summary>
            <param name="key">The key.</param>
            <param name="encoding">The encoding used to read the key.</param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMACMD5"/> class the supplied key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.String)">
            <summary>
            Computes the hash value for the specified string (UTF8 default encoding).
            </summary>
            <param name="buffer">The input to compute the hash code for. </param>
            <returns>The computed hash code</returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.String,System.Text.Encoding)">
            <summary>
            Computes the hash value for the specified string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The computed hash code
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHash(System.Byte[])">
            <summary>
            Computes the hash value for the specified byte array.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>
            The computed hash code
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHashToBase64String(System.String)">
            <summary>
            Computes the hash for the specified string (UTF8 default encoding) to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <returns>The computed hash code in base64 string</returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.ComputeHashToBase64String(System.String,System.Text.Encoding)">
            <summary>
            Computes the hash for the specified string to base64 string.
            </summary>
            <param name="buffer">The input to compute the hash code for.</param>
            <param name="encoding">The encoding.</param>
            <returns>
            The computed hash code in base64 string
            </returns>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.InitializeKey(System.Byte[])">
            <summary>
            Initializes the key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.UpdateIOPadBuffers">
            <summary>
            Updates the IO pad buffers.
            </summary>
        </member>
        <member name="M:System.Security.Cryptography.HMACMD5.Combine(System.Byte[],System.Byte[])">
            <summary>
            Combines two array (a1 and a2).
            </summary>
            <param name="a1">The Array 1.</param>
            <param name="a2">The Array 2.</param>
            <returns>Combinaison of a1 and a2</returns>
        </member>
        <member name="P:System.Security.Cryptography.HMACMD5.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
    </members>
</doc>
